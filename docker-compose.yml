services:
  postgres:
    image: postgres:16
    container_name: mrp_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: MRP
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - mrp_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d MRP" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4
    container_name: mrp_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - mrp_network

  app:
    build: .
    develop:
      watch:
        - action: rebuild
          path: ./src
        - action: rebuild
          path: ./pom.xml
    container_name: mrp_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: MRP
      DB_USER: admin
      DB_PASSWORD: admin
    depends_on:
      postgres:
          condition: service_healthy
    networks:
      - mrp_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  mrp_network:
    driver: bridge
